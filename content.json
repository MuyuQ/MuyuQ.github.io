{"meta":{"title":"Mcode","subtitle":null,"description":"简单，快乐","author":"Muyu","url":"http://mcode.tech","root":"/"},"pages":[],"posts":[{"title":"Flaks配置文件相关","slug":"Flaks配置文件相关","date":"2020-07-28T05:24:56.000Z","updated":"2020-07-28T05:34:43.499Z","comments":true,"path":"2020/07/28/Flaks配置文件相关/","link":"","permalink":"http://mcode.tech/2020/07/28/Flaks%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3/","excerpt":"","text":"Flask的配置文件实际上是字典的一个子类,且能够像字典一样被修改. 一般使用config.py文件进行配置管理. 12app = Flask(__name__)app.config.from_object('app.sercure') 当需要使用多个配置文件时,可以进行多次导入. 123app = Flask(__name__)app.config.from_object('app.sercure')app.config.from_object('app.setting') 也可以使用py文件保存配置 1app.config.from_pyfile('config.py') 有一种有趣的模式,可以为配置使用类和继承: 12345678910111213class Config(object): DEBUG = False TESTING = False DATABASE_URI = 'sqlite://:memory:'class ProductionConfig(Config): DATABASE_URI = 'mysql://user@localhost/foo'class DevelopmentConfig(Config): DEBUG = Trueclass TestingConfig(Config): TESTING = True 在调用时使用 1app.config.from_object('configmodule.ProductionConfig')","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-07-21T06:05:55.794Z","updated":"2020-07-21T06:05:55.794Z","comments":true,"path":"2020/07/21/hello-world/","link":"","permalink":"http://mcode.tech/2020/07/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}