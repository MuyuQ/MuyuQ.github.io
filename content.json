{"meta":{"title":"Mcode","subtitle":null,"description":"简单，快乐","author":"Muyu","url":"http://mcode.tech","root":"/"},"pages":[],"posts":[{"title":"test","slug":"test","date":"2020-07-21T06:23:32.000Z","updated":"2020-07-21T06:23:32.931Z","comments":true,"path":"2020/07/21/test/","link":"","permalink":"http://mcode.tech/2020/07/21/test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-07-21T06:05:55.794Z","updated":"2020-07-21T06:05:55.794Z","comments":true,"path":"2020/07/21/hello-world/","link":"","permalink":"http://mcode.tech/2020/07/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Nginx 进阶模块","slug":"Nginx 进阶","date":"2018-03-13T04:12:59.000Z","updated":"2018-03-13T04:13:29.000Z","comments":true,"path":"2018/03/13/Nginx 进阶/","link":"","permalink":"http://mcode.tech/2018/03/13/Nginx%20%E8%BF%9B%E9%98%B6/","excerpt":"简介","text":"简介 ##静态资源配置 配置语法- sendfile 123Syntax: sendfile on | off;Default: sendfile off;Context: server,location,if in location 配置语法- tcp-nopush 1234Syntax: tcp_nopush on | offDefault: tcp_push off;Context: http,server,location#在 sendfile 开启的情况下, 提高网络包的传递效率 不着急推送,而是将多个 tcp 打包进行集中发送,以提升效率.适合大文件 配置语法- tcp-nodelay 1234Syntax: tcp_nodelay on | offDefault: tcp_nodelay on;Context: http,server,location#在 keepalive 连接下,提高网络包的传递实时性 配置语法-压缩 1234#压缩等级设置Syntax: gzip_comp_level level;Default: gzip_comp_level 1;Context: http,server,location 扩展 Nginx 压缩模块 http_gzip_static_module-预读 gzip 功能. http_gunzip_module-应用支持 gunzip 的压缩功能. (很少用到) gzip 对文本的压缩很好,对图片的压缩一般. 12 浏览器缓存HTTP 协议定义的缓存机制(如 Expires,Cache-control等) 校验过期机制 校验是否过期 Expires(http1.0),Cache-Control(http1.1) (max-age定义一个周期) 如果 max-age 显示已经过期,则会检查后面两个校验 协议中 Etag头信息校验 Etag(保存一个字符串,来识别缓存,类似”别名”) Last-Modified 头信息校验 Last-Modified(保存一个时间,精确到秒,如果两个时间不一致,则服务器会传递一份新的) Max-age&lt;=0时,就要求每次请求都会要求服务器检查是否过期.即使服务器端设置了 max-age, 但是浏览器为了实时更新,会将 request里 max-age 设置为0. 静态资源配置场景设置 配置语法-expires location / { expires 24h; } 跨域访问为什么浏览器禁止跨域访问? 不安全,容易出现 CSRF 攻击. nginx 怎么做? 123Syntax: add_header name value [always];Default: - Context: http,server,location,if in location 如果服务器允许跨域访问,则浏览器不会禁止. 通过检查Access-Control-Allow-Origin 头来确定是否允许. 1234location ~ .*\\.(htm|html)$ &#123; add_header Access-Control-Allow-Origin http://www.qq.com; add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;&#125; 如果将 域名替换成*,则会对 CSRF 攻击完全开放. ##防盗链 简单防盗链实现. 防盗链设置思路. 首要方式:区别哪些请求是非正常的用户请求 基于 http_refer 防盗链配置模块 12345678# valid_referers表示允许哪些referer信息访问 #none表示允许没有带referer的信息过来 #blocked表示#ip 只允许这个ip的referer过来访问.valid_referers none blocked ip ;if($invalid_referer)&#123; return 403;&#125; ‘referer’是告诉服务器这个请求是从哪个页面链接过来的. 如果直接访问页面,则在 access.log 里面为 “-“. 进阶解决方案: 后期补充 代理服务正向代理 客户端—代理—|— 服务端 反向代理 客户端—|—代理—服务端 区别在于代理的对象不一样. 正向代理代理的对象是客户端. 反向代理代理的对象是服务端. 配置语法12345Syntax: proxy_pass URL;Default: -Context: location,if in location,limit_except#http://ip:80/url/ 服务器 A (10.211.55.15) 服务器 B(10.211.55.16) 服务器A, 12345location / &#123; if($http_x_forwarded_for !~*\"^10\\.211\\.55\\.16\")&#123; return 403; &#125;&#125; 这样设置后,所有不是来自服务器 B 的访问,都会被返回403. 服务器 B, 123location /&#123; proxy_pass $http_host$request_uri;&#125; 注意 uri 和 url 是不同的. uri 统一资源标志符, url 统一资源定位符. 一个用于解析,一个用于直接传递路径. 其他语法配置 proxy_buffering缓冲区 proxy_redirect跳转重定向 proxy_set_header 头信息 ,扩展 proxy_hide_header,proxy_set_body proxy_connect_timeout 超时 ,扩展 proxy_read_timeout,proxy_send_timeout proxy 常用配置1234567891011121314151617location / &#123;proxy_pass http://127.0.0.1:8080;proxy_redirect default;proxy_set_header Host $http_host;proxy_set_header X-Real-IP $remote_addr;proxy_connect_timeout 30;proxy_send_timeout 60;proxy_read_timeout 60;proxy_buffer_size 32k;proxy_buffering on;proxy_buffers 4 128k;proxy_busy_buffers_size 256k;proxy_max_temp_file_size 256k;&#125; 如果有多个 proxy 方案,则可以使用 123location / &#123; include proxy_params;&#125; 然后把配置放在文件里.","categories":[{"name":"Nginx","slug":"Nginx","permalink":"http://mcode.tech/categories/Nginx/"}],"tags":[{"name":"server","slug":"server","permalink":"http://mcode.tech/tags/server/"}]},{"title":"youtube-dl 下载","slug":"Mac/title: youtube下载","date":"2017-06-16T05:39:25.000Z","updated":"2017-06-19T02:25:50.000Z","comments":true,"path":"2017/06/16/Mac/title: youtube下载/","link":"","permalink":"http://mcode.tech/2017/06/16/Mac/title:%20youtube%E4%B8%8B%E8%BD%BD/","excerpt":"youtube 上有很多不错的视频,奈何超清画质不能下载,所以琢磨了琢磨 youtube-dl, 用来下载 youtube 的视频. 据说也可以下载优酷,土豆之类的.","text":"youtube 上有很多不错的视频,奈何超清画质不能下载,所以琢磨了琢磨 youtube-dl, 用来下载 youtube 的视频. 据说也可以下载优酷,土豆之类的. 使用 youtube-dl 进行下载, youtube-dl 自动调用 FFmpeg 进行音频和视频的合并. 在 zsh 内部写了别名, 所以直接在终端中使用 youtube +要下载视频的 URL, 就能下载到 影片文件夹. 默认下载分辨率最高的资源.","categories":[{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/categories/Mac/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/tags/Mac/"}]},{"title":"Mac 下的一些软件推荐","slug":"Mac/title: Mac 下的一些软件推荐","date":"2017-06-09T08:17:41.000Z","updated":"2017-06-09T08:17:41.000Z","comments":true,"path":"2017/06/09/Mac/title: Mac 下的一些软件推荐/","link":"","permalink":"http://mcode.tech/2017/06/09/Mac/title:%20Mac%20%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/","excerpt":"","text":"先挖坑","categories":[{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/categories/Mac/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/tags/Mac/"}]},{"title":"Mac 的一些技巧","slug":"Mac/title: Mac 的一些小技巧","date":"2017-05-16T09:25:28.000Z","updated":"2017-05-23T05:03:37.000Z","comments":true,"path":"2017/05/16/Mac/title: Mac 的一些小技巧/","link":"","permalink":"http://mcode.tech/2017/05/16/Mac/title:%20Mac%20%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/","excerpt":"在使用 Mac 过程中的一些小技巧和快捷键.","text":"在使用 Mac 过程中的一些小技巧和快捷键. 通过Command+点击在新窗口中打开Finder侧边栏上的项目 Command+鼠标拖拽可以移动后方的窗口，同时不影响前端窗口 Command+点击Dock上的图标可以打开应用在Finder中的位置 Command+回车Spotlight中的搜索结果可以直接在Finder中查看 Command+回车Spotlight中的搜索结果可以直接在Finder中查看","categories":[{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/categories/Mac/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/tags/Mac/"}]}],"categories":[{"name":"Nginx","slug":"Nginx","permalink":"http://mcode.tech/categories/Nginx/"},{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/categories/Mac/"}],"tags":[{"name":"server","slug":"server","permalink":"http://mcode.tech/tags/server/"},{"name":"Mac","slug":"Mac","permalink":"http://mcode.tech/tags/Mac/"}]}